default:
  image:
    name: "docker:18"
    entrypoint: [""]
  services:
    - name: docker:20-dind
      alias: docker
      # in our experience although you'd assume this would be sufficient, this did
      # nothing to prevent connection errors without `DOCKER_TLS_CERTDIR` being set
      # to an empty string, and I would call that beyond mildly infuriating.
      command: ["--tls=false"]
  tags:
    - "tokend"

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  REGISTRY: registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  IMAGE_NAME: $REGISTRY:$CI_COMMIT_SHA
  IMAGE_NAME_TAG: $REGISTRY:$CI_COMMIT_TAG


.before_script_template: &before_script_templ
  before_script:
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

stages:
  - build

Build And Publish:
  stage: build
  only:
    - branches
  <<: *before_script_templ
  script:
    - docker build --pull -t "$IMAGE_NAME" -f docker/Dockerfile .
    - docker push "$IMAGE_NAME"
  except: [schedules]
  interruptible: true



Build And Publish Tag:
  stage: build
  only:
    - tags
  <<: *before_script_templ
  script:
    - docker build --pull -t "$IMAGE_NAME_TAG" -f docker/Dockerfile .
    - docker push "$IMAGE_NAME_TAG"
  except: [schedules]
  interruptible: true
